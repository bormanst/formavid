# Copyright (C) 2022 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.



***The deployment requires root permissions so run as root or sudo.***



Debian 11 or compatible base distro via ssh as 'root':

apt-get update && apt-get install -y git
git clone https://github.com/bormanst/formavid /usr/local/formavid
cd /usr/local/formavid
./install

The install script is meant to be run, as 'root', from a bash client on the HOST
and will deploy the appliance onto a compatible base distro that uses standard
locations, Systemd, and bash. It is assumed that a "base distro" has only core
utilities and a ssh server installed - no desktop, other servers, or applications.
However, if the distro has a component already installed, such as apache or mysql,
then the install script should automatically skip installing the corresponding
component; the triggers depend on standard locations and Systemd. Please review
and modify the available scripts before deploying on something other than Debian 11
Bullseye. The scripts are well documented and relatively easy to read and edit.


General information:

Install and initialization scripts are located in bin directory.
Base lamp components are located in lamp directory.
Minor or dependent applications are located in applications directory.

The main deployment script, deploy_appliance, is located in the bin directory.
The deploy_appliance script has some key components:
-Loads default envars located in /etc/formavid/default_envars.
-Sets envars accordingly.
-Gets passwords to use for install.
-Searches lamp directory for, and installs, all apt packages.
-Searches applications directory for, and installs, all apt packages.
-Searches lamp directory for configuration files and overlays to apply.
-Searches applications directory for configuration files and overlays to apply.
-Initializes etckeeper.
-Creates initial drupal stack.
-Logs deployment information.

The deployment format allows for the addition, removal, or custom configuration
of individual components. Major server components (like Tomcat, etc.) go in the
lamp directory. Minor components or those with dependencies go in the
applications directory. The deploy_appliance script sorts alphabetically so if
additional components have "chained dependencies" then name the directories
accordingly (numbered prefixes work well) and remove the "&" for backgound
execution in the deploy_appliance script, i.e. change "${SCRIPT} ${CHILD_DIR} &"
to "${SCRIPT} ${CHILD_DIR}". Backgound "&" execution allows for quicker installs
on threaded or multi-core cpus but lacks the execution order control that would
be required for any "chained dependencies".

All scripts are pretty well documented and can serve as templates for any
additional components. BorgBackup has an example of an all-apt-gets script that
loads an optional repository if needed. The lamp/base component is an example
of overlays to apply, but be careful as the overlays will clobber (overwrite)
the corresponding files on the base distribution. Overlays should be applied by
the corresponding configuration script.

Removal of components, prior to deployment, is as simple as removing the
corresponding directory. The directory can be deleted or just moved to another
location outside of the lamp or applications directories. If a component has
already been deployed, then removal becomes a manual task. While the specific
deployment script can be used as a guide for removal, it may not contain all
subsequent modifications. Please refer to the application specific documentation
and remember to backup any database, data and configuration files.

The deploy_appliance script is designed to be re-run to install new or
previously skipped components without affecting already installed components.
If a component is skipped then the corresponding configurations and passwords
are also skipped even though they may be requested by another script prompt.
Please review the scripts involved before re-running any scripts. Many of the
other scripts in the bin directory can be run individually, as well, to change
passwords, etc.



Post install manual configuration considerations:

Bash (admin sudo) - Disable any unused services: systemctl disable servicename
Bash (admin sudo) - Add any addtional sites:
    /usr/local/formavid/bin/deploy/python/create-drupal-stack.py
Update DNS entries at hosting service.
Bash (admin sudo) - Activate Certbot (optional):
    Set: /etc/formavid/default_envars/CERTBOT_INSTALL="True"
    Set: /etc/formavid/default_envars/CREATE_DRUPAL_STACK="False"
    Add domains and subdomains (optional):
        Modify /usr/local/formavid/applications/certbot/certbot
        Append domain(s) to command line "certbot certonly ... -d domain"
    If hacking local /etc/hosts for subdomain access then
        update DNS with temporary entries at hosting service.
    Deploy: /usr/local/formavid/bin/deploy_appliance
    If hacking local /etc/hosts for subdomain access then
        remove temporary DNS entries at hosting service.
    Set redirects (optional): Update drupal apache2 entries in
        /etc/apache2/sites-available with http to https redirects.
        In section <VirtualHost *:80> replace DocumentRoot line
        with RedirectPermanent / "https://sitedomain/"
Webmin - Disable any associated appliance firewall entries.
Bash (admin sudo) - Activate BorgBackup (optional).
    Set: /etc/formavid/default_envars/CONFIGURE_BORGBACKUP="True"
    Deploy: /usr/local/formavid/bin/deploy_appliance
