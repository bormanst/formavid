#!/bin/bash
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=borgbackup

# log check
MESSSAGE="Check packages: ${PACKAGE}"
echo ${MESSSAGE} >> ${LOG}

# check packages
PKG_CHECK=${PACKAGE^^}
# check dir
APP_DIR=/usr/local/${PACKAGE}
if [ ! -z "${!PKG_CHECK}" ] || [ -d "${APP_DIR}" ]; then
    echo ""
    echo ""
    echo "WARNING! ${PACKAGE} already exists."
    echo "WARNING! ${PACKAGE} may have already been initialized by this script."
    echo "WARNING! Re-running this script may corrupt existing system."
    echo "WARNING! Please review script in applications/${PACKAGE} for further details."
    echo ""
    echo ""
    MESSSAGE="Skipping package install for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
else
    # add base packages
    # check install gcsfuse
    if [ "${GCS_BUCKET}" != "None" ] && [ "${GCS_PROJECT_ID}" != "None" ]; then
        # using gcsfuse to directly temp mount storage buckets instead of rclone, etc.
        # export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s`
        # no buster so use stretch
        export GCSFUSE_REPO=gcsfuse-stretch
        echo "deb http://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        export APTGETS="${PACKAGE} ${PACKAGE}-doc gcsfuse"
    else
        # no gcsfuse
        export APTGETS="${PACKAGE} ${PACKAGE}-doc"
    fi
    export "${PACKAGE^^}"="True"
    # log export
    MESSSAGE="export ${PACKAGE^^}=True"
    echo ${MESSSAGE} | tee -a ${LOG} ${DEFAULT_ENVARS}
fi
