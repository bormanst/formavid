#!/bin/bash -e
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=roundup

# log check
MESSSAGE="Checking dependencies for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# check packages
PKG_CHECK=${PACKAGE^^}
if [ -z "${!PKG_CHECK}" ]; then exit 0; fi

# set tracker name
TRACKER=support

# check dir
APP_DIR=${WEBROOT}/${TRACKER}
if [ -d "${APP_DIR}" ]; then
    MESSSAGE="The ${APP_DIR} already exists. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! ${PACKAGE} may have already been initialized by this script."
    echo "WARNING! Re-running this script may corrupt existing system."
    echo "WARNING! Please review script in applications/${PACKAGE} for further details."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: apache2
DEPENDS=apache2
systemctl start ${DEPENDS} && sleep 10
if ! (systemctl -q is-active ${DEPENDS}); then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: mysql
DEPENDS=mysql
systemctl start ${DEPENDS} && sleep 10
if ! (systemctl -q is-active ${DEPENDS}); then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# log configure
MESSSAGE="Configuring ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# set subdomain for app
SUBDOMAIN="${TRACKER}."

# create database
MESSSAGE="Creating database for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
DB_NAME=${TRACKER}
DB_USER=${PACKAGE}
ROOT_CREDS="--user=root --password=${DB_PASS}"
MYSQL_ADMIN="/usr/bin/mysqladmin ${ROOT_CREDS}"
MYSQL_BATCH="/usr/bin/mysql ${ROOT_CREDS} --batch"
if (${MYSQL_ADMIN} ${ROOT_CREDS} create ${DB_NAME}); then
    # add database user
    ${MYSQL_BATCH} --execute "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO ${DB_USER}@localhost IDENTIFIED BY '${APP_PASS}'; FLUSH PRIVILEGES;"
else
    echo ""
    echo ""
    echo "WARNING! The ${DB_NAME} database already exists."
    echo "WARNING! Please drop the database before running this script."
    echo "WARNING! Be sure to make a backup if applicable."
    echo ""
    echo ""
    exit 0
fi

# pip install
MESSSAGE="Installing latest pip distro for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# add roundup user for pip install
if [ $(grep -c "^${DB_USER}:" /etc/passwd) -eq 0 ];  then
    useradd -U -m -r -s /bin/bash ${DB_USER}
fi

HOME="/home/${DB_USER}/.local"
if [ ! -d "${HOME}" ]; then
    # install roundup to user home
    su - ${DB_USER} -c "pip install ${PACKAGE} --user"
    # set home access perms
    chmod -R 0775 ${HOME}
    # add symlinks
    LOCAL=/usr/local
    TARGET=/bin/roundup-admin
    ln -sf ${HOME}${TARGET} ${LOCAL}${TARGET}
    TARGET=/bin/roundup-gettext
    ln -sf ${HOME}${TARGET} ${LOCAL}${TARGET}
    TARGET=/bin/roundup-mailgw
    ln -sf ${HOME}${TARGET} ${LOCAL}${TARGET}
    TARGET=/share/roundup
    ln -sf ${HOME}${TARGET} ${LOCAL}${TARGET}
    TARGET=/lib/python2.7
    ln -sf ${HOME}${TARGET}/site-packages/roundup ${LOCAL}${TARGET}/dist-packages/roundup
    ln -sf ${HOME}${TARGET}/site-packages/roundup-1.5.1.dist-info ${LOCAL}${TARGET}/dist-packages/roundup-1.5.1.dist-info
fi

# tracker creation
MESSSAGE="Creating tracker for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
BACKEND=mysql
TEMPLATE=classic
OPTIONS="admin_email=admin,email_registration_confirmation=no,dispatcher_email=admin,tracker_name=\"${SITETITLE} Issue Tracker\",tracker_web=https://support.${APP_HOSTNAME}/${TRACKER}/,mail_domain=${APP_HOSTNAME},mail_host=localhost,rdbms_name=${TRACKER},rdbms_password=${DB_PASS}"
su - ${DB_USER} -c "roundup-admin -i ${APP_DIR} install ${TEMPLATE} ${BACKEND} ${OPTIONS}"

# initialise tracker
MESSSAGE="Initializing tracker for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
su - ${DB_USER} -c "roundup-admin -i ${APP_DIR} initialise ${ROUNDUP_PASS} <<< y"

# apply overlay
OVERLAY_DIR=$1/overlay
if [ -d "${OVERLAY_DIR}" ]; then
    cp -rf ${OVERLAY_DIR}/* /
    MESSSAGE="Applied overlay for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
fi

# tracker conf
MESSSAGE="Configuring tracker for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
CONF=${APP_DIR}/config.ini

# create etc dir
ETC=/etc/${PACKAGE}/${TRACKER}
mkdir -p ${ETC}

# move tracker configuration to etc
mv ${CONF} ${ETC}/tracker-config.ini
ln -s ${ETC}/tracker-config.ini ${CONF}

# set roundup passwords
# ${FORMAVID}/bin/initialize/python/roundup.py

# hide issues until authenticated
OPTION="for cl in 'issue', 'file', 'msg', 'keyword', 'priority', 'status':"
sed -i "1,/^${OPTION}/s/^${OPTION}/#${OPTION}/" ${APP_DIR}/schema.py
OPTION="db.security.addPermissionToRole('Anonymous', 'View', cl)"
sed -i "1,/^\([[:blank:]]*\)${OPTION}/s/^\([[:blank:]]*\)${OPTION}/#\1${OPTION}/" ${APP_DIR}/schema.py

# don't display credit in popups
for file in *.help*.html _generic.calendar.html; do
    sed -i "s|</head>|<style type='text/css'> #formavid-credit { display: none; }</style>\n  </head>|" ${APP_DIR}/html/${file}
done

# create local documentation
mkdir -p ${APP_DIR}/docs
ln -sf ${HOME}/share/doc/roundup/html ${APP_DIR}/docs
FILE=${APP_DIR}/html/page.html
sed -i "s;Roundup docs</a>;Roundup docs</a>\n    (<a href=\"/support/docs\" i18n:translate=\"\">local</a>);" ${FILE}

# give apache2 db access
chown -R www-data:www-data ${APP_DIR}/db

# set drupal theme dir
THEME_DIR=${PROJECT_DIR}/web/themes/${SITENAME}

# set theme alias
ALIAS_THEME=""
ALIAS_THEME_CSS=""
if [ -f "${DRUPAL_SCRIPT}" ]; then
    MESSSAGE="Applying system theme for ${PACKAGE} ..."
    echo ${MESSSAGE} | tee -a ${LOG}
    # update aliases
    ALIAS_THEME="Alias /${TRACKER}/theme ${THEME_DIR}"
    ALIAS_THEME_CSS="Alias /${TRACKER}/theme/css ${THEME_DIR}/components/asset-builds/css"
    # apply theme
    FILE=${APP_DIR}/html/page.html
    sed -i "s/<head>/<head>\n<link rel=\"shortcut icon\" href=\"@@file\/images\/favicon.ico\" type=\"image\/vnd.microsoft.icon\" \/>/" ${FILE}
    sed -i "/stylesheet/a<link rel=\"stylesheet\" href=\"/support/theme/css/header.css\" \/>" ${FILE}
    sed -i "/<body/r /etc/formavid/header.txt" ${FILE}
    sed -i "s/sedtoolname/Support/g" ${FILE}
    sed -i "s/sedbrsize/48px/g" ${FILE}
    sed -i "s/\/images\/logo.svg/@@file\/images\/logo.svg/g" ${FILE}
    # create images dir: logo symlinked in create-drupal-stack.py
    mkdir -p ${APP_DIR}/html/images
fi

# apache2: create conf
MESSSAGE="Configuring apache for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
CONF=${ETC}/apache.conf
cat > ${CONF} <<EOF
<VirtualHost *:443>
    ServerName ${SUBDOMAIN}${APP_HOSTNAME}
    ServerAdmin webmaster@localhost
    UseCanonicalName Off
    SSLEngine on
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
    RedirectMatch ^/$ /${TRACKER}/
    PythonOptimize On
    ${ALIAS_THEME}
    ${ALIAS_THEME_CSS}
    Alias /${TRACKER}/docs ${APP_DIR}/docs/html
    AliasMatch ^/${TRACKER}/@@file/(.*) ${APP_DIR}/html/\$1
    AliasMatch ^/${TRACKER}/(?!@@file/)(.*) ${APP_DIR}/dummy.py/\$1
    DocumentRoot ${APP_DIR}
    <Directory ${APP_DIR}>
        Require all granted
        AllowOverride None
        Options +FollowSymLinks
        AddHandler python-program .py
        PythonHandler roundup.cgi.apache
        PythonOption TrackerHome ${APP_DIR}
        PythonOption TrackerLanguage en
    </Directory>
</VirtualHost>

<VirtualHost *:80>
    ServerName ${SUBDOMAIN}${APP_HOSTNAME}
    ServerAdmin webmaster@localhost
    UseCanonicalName Off
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
    RedirectPermanent /${TRACKER}/ "https://${SUBDOMAIN}${APP_HOSTNAME}/${TRACKER}/"
    RedirectPermanent / "https://${SUBDOMAIN}${APP_HOSTNAME}/${TRACKER}/"
</VirtualHost>
EOF

# apache2: set conf perms
chmod 0644 ${CONF}

# apache2: link conf file
ln -s ${CONF} /etc/apache2/sites-available/${TRACKER}.conf

# apache2: enable conf
a2ensite ${TRACKER}

# log completed
MESSSAGE="Package ${PACKAGE} install has completed."
echo ${MESSSAGE} | tee -a ${LOG}

exit 0
