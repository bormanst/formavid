#!/bin/bash -e
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=simpleinvoices

# log check
MESSSAGE="Check packages: ${PACKAGE}"
echo ${MESSSAGE} >> ${LOG}

# check packages
PKG_CHECK=${PACKAGE^^}
if [ -z "${!PKG_CHECK}" ]; then exit 0; fi

APP_DIR=/var/www/${PACKAGE}
# check dir
if [ -d "${APP_DIR}" ]; then
    MESSSAGE="The ${APP_DIR} already exists. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! ${PACKAGE} may have already been initialized by this script."
    echo "WARNING! Re-running this script may corrupt existing system."
    echo "WARNING! Please review script in applications/${PACKAGE} for further details."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: mysql
DEPENDS=mysql
systemctl start ${DEPENDS} && sleep 10
if ! (systemctl -q is-active ${DEPENDS}); then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: apache2
DEPENDS=apache2
systemctl start ${DEPENDS} && sleep 10
if ! (systemctl -q is-active ${DEPENDS}); then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: php
DEPENDS=php
if ! (hash php); then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# dependencies check: git
DEPENDS=git
if ! hash ${DEPENDS} 2>/dev/null; then
    MESSSAGE="Required service ${DEPENDS} not active. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! Please ensure that ${DEPENDS} is active."
    echo ""
    echo ""
    exit 0
fi

# log configure
MESSSAGE="Configuring ${PACKAGE}..."
echo ${MESSSAGE} >> ${LOG}

DB_NAME=${PACKAGE}
DB_USER=${PACKAGE}

CONF=${APP_DIR}/config/config.php
AVAILABLE=/etc/apache2/sites-available
ENABLED=/etc/apache2/sites-enabled

# install latest
URL="git://github.com/${PACKAGE}/${PACKAGE}.git"
BRANCH="master"
git clone --recursive --depth 1 -b ${BRANCH} ${URL} ${APP_DIR}

# set permissions
chown -R root:root ${APP_DIR}
chown -R www-data:www-data ${APP_DIR}/tmp
chown www-data:www-data ${CONF}

# tweak configuration
sed -i "0,/params.username/s/params.username.*/params.username = ${DB_USER}/" ${CONF}
sed -i "0,/params.password/s/params.password.*/params.password = ${DB_PASS}/" ${CONF}
sed -i "0,/params.dbname/s/params.dbname.*/params.dbname = ${DB_NAME}/" ${CONF}
sed -i "s|Europe/London|UTC|" ${CONF}

# set database access
MYSQL_BATCH="mysql --user=root --password=${DB_PASS} --batch"
MYSQL_ADMIN="mysqladmin --user=root --password=${DB_PASS}"
${MYSQL_ADMIN} create ${DB_NAME}
${MYSQL_BATCH} --execute "grant all privileges on ${DB_NAME}.* to ${DB_USER}@localhost identified by '${DB_PASS}'; flush privileges;"

# curl based install
URL="http://127.0.0.1/index.php?module=install"
CURL="curl -c /tmp/cookie -b /tmp/cookie"
${CURL} "${URL}&view=structure"
${CURL} "${URL}&view=essential"
rm -f /tmp/cookie

# apply overlay
OVERLAY_DIR=$1/overlay
if [ -d "${OVERLAY_DIR}" ]; then
    cp -rf ${OVERLAY_DIR}/* /
    MESSSAGE="Applied overlay for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
fi

# enable authentication and set default creds
sed -i "s|^authentication.enabled.*|authentication.enabled = true|" ${CONF}

#we don`t need mysql 1071 error
sed -i "s|\`email\` varchar(255) DEFAULT NULL,|\`email\` varchar(40) DEFAULT NULL,|" ${APP_DIR}/databases/mysql/Full_Simple_Invoices.sql
sed -i "s|\`name\` varchar(255) NOT NULL,|\`name\` varchar(50) NOT NULL,|" ${APP_DIR}/databases/mysql/Full_Simple_Invoices.sql

# create database
mysql --user=root --password=${DB_PASS} ${DB_NAME} < ${APP_DIR}/databases/mysql/Full_Simple_Invoices.sql

# set nonce key: should be random and secret
RANDOM_1=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo ''`
RANDOM_2=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo ''`
RANDOM_3=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo ''`
sed -i "s|^nonce.key.*|nonce.key = ${RANDOM_1}${RANDOM_2}${RANDOM_3}|" ${CONF}

# secure sensitive files
chmod 0640 ${CONF}

# create etc dir
ETC=/etc/${PACKAGE}
mkdir -p ${ETC}

# move config.php to etc
mv ${CONF} ${ETC}/config.php
ln -s ${ETC}/config.php ${CONF}

# move define.php to etc
CONF=${APP_DIR}/config/define.php
mv ${CONF} ${ETC}/define.php
ln -s ${ETC}/define.php ${CONF}

# drupal theme dir
PROJECT="prod"
DRUPAL_DIR="/var/www/drupal8"
THEME_DIR=${DRUPAL_DIR}/${PROJECT}/web/themes/${SITENAME}

# apache2: create conf
CONF=${ETC}/apache.conf
cat > ${CONF} <<EOF
<VirtualHost *:443>
    ServerName billing.${APP_HOSTNAME}
    ServerAdmin webmaster@localhost
    UseCanonicalName Off
    SSLEngine on
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
    Alias /theme/css ${THEME_DIR}/components/asset-builds/css
    Alias /theme ${THEME_DIR}
    DocumentRoot ${APP_DIR}
    <Directory ${APP_DIR}>
        AllowOverride All
        Options +FollowSymLinks
        AuthName "password protected area"
        AuthType Basic
        Require valid-user
        AuthBasicProvider dbm
        AuthDBMUserFile /usr/local/apache2/passwd/${PACKAGE}/passwords.dbm
    </Directory>
</VirtualHost>

<VirtualHost *:80>
    ServerName billing.${APP_HOSTNAME}
    ServerAdmin webmaster@localhost
    UseCanonicalName Off
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
    RedirectPermanent / "https://billing.${APP_HOSTNAME}/"
</VirtualHost>
EOF

#  apache2: set conf perms
chmod 0644 ${CONF}

# apache2: link conf file
ln -s ${CONF} ${AVAILABLE}/${PACKAGE}.conf

# apache2: enable conf
a2enmod rewrite
a2ensite ${PACKAGE}

# add hosts entry
sed -i "/127.0.1.1/s/$/ billing.${APP_HOSTNAME}/" /etc/hosts

# apply theme.
FILE=${APP_DIR}/templates/default/header.tpl
sed -i "/<title/d" ${FILE}
sed -i "/favicon.ico/d" ${FILE}
sed -i "/<head/r ${FORMAVID}/sites-template/styles.txt" ${FILE}
sed -i '/base.css/d' ${FILE}
sed -i "/<head/a<title>${SITETITLE} Billing</title>" ${FILE}
sed -i "/<body/r /etc/formavid/header.txt" ${FILE}
sed -i "s/sedtoolname/Billing/g" ${FILE}
sed -i "s/sedbrsize/50px/g" ${FILE}

# clean up
touch ${APP_DIR}/tmp/cache/
rm -rf ${APP_DIR}/tmp/cache/*

# set admin password and email
${FORMAVID}/bin/initialize/python/simpleinvoices.py

MESSSAGE="Package ${PACKAGE} install has completed."
echo ${MESSSAGE} >> ${LOG}

exit 0
