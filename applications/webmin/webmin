#!/bin/bash -e
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=webmin

# log check
MESSSAGE="Checking dependencies for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# check packages
PKG_CHECK=${PACKAGE^^}
if [ -z "${!PKG_CHECK}" ]; then exit 0; fi

# check exists
# Note: check ssl_redirect=1 in miniserv.conf
CONF=/etc/webmin/miniserv.conf
if grep -q "ssl_redirect=1" ${CONF}; then
    MESSSAGE="The ${CONF} already exists. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! ${PACKAGE} may have already been initialized by this script."
    echo "WARNING! Re-running this script may corrupt existing system."
    echo "WARNING! Please review script in applications/${PACKAGE} for further details."
    echo ""
    echo ""
    exit 0
fi

# log configure
MESSSAGE="Configuring ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# apply overlay
OVERLAY_DIR=$1/overlay
if [ -d "${OVERLAY_DIR}" ]; then
    cp -rf ${OVERLAY_DIR}/* /
    MESSSAGE="Applied overlay for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
fi

# update miniserv
MESSSAGE="Updating miniserv for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
sed -i "/^blockhost_time=/ s|=.*|=600|" ${CONF}
sed -i "/^ipv6=/ s|=.*|=0|" ${CONF}
sed -i "/^listen=/ s|=.*|=12321|" ${CONF}
sed -i "/^port=/ s|=.*|=12321|" ${CONF}
sed -i "/^ssl=/ s|=.*|=1|" ${CONF}
cat >> ${CONF} <<EOF
no_resolv_myname=0
sockets=
ssl_redirect=1
EOF

# update login cookie
CGI=/usr/share/webmin/session_login.cgi
if [ -f $CGI ]; then
    sed -i "/Set-Cookie/ s/sec/sec; httpOnly/g" ${CGI}
fi

# move System Time and PHP Configuration to System category
echo time=system >> /etc/webmin/webmin.cats
echo phpini=system >> /etc/webmin/webmin.cats

# rename "Others" => "Tools" (webmin is weird)
echo =Tools >> /etc/webmin/webmin.catnames

# set up convenience links to Webmin log files
WEBMIN_VAR=/var/webmin
WEBMIN_LOG=/var/log/webmin
mkdir -p ${WEBMIN_LOG}
files="miniserv.log miniserv.error webmin.log"
for f in ${files}; do
    ln -s ${WEBMIN_VAR}/$f ${WEBMIN_LOG}/$f
done

# set theme
MESSSAGE="Setting theme for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
set ${WEBMIN_THEME:=authentic-theme}
CONF_DIR=/etc/webmin
LOGO_DIR=${CONF_DIR}/${WEBMIN_THEME}
echo "theme=$WEBMIN_THEME" >> ${CONF_DIR}/config
echo "preroot=$WEBMIN_THEME" >> ${CONF_DIR}/miniserv.conf

# configure firewall
MESSSAGE="Configuring firewall for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
FTP=21
SSH=22
HTTP=80
IMAP=143
HTTPS=443
SMTP=587
IMAPS=993
SOLR=8983
SHELL=12320
WEBMIN=12321
ADMINER=12322
# Solr: check open firewall
if [ "${SOLR_INSTALL}" == "True" ] ; then
    set ${WEBMIN_FW_TCP_INCOMING:=${FTP} ${SSH} ${HTTP} ${IMAP} ${HTTPS} ${SMTP} ${IMAPS} ${SOLR} ${SHELL} ${WEBMIN} ${ADMINER}}
else
    set ${WEBMIN_FW_TCP_INCOMING:=${FTP} ${SSH} ${HTTP} ${IMAP} ${HTTPS} ${SMTP} ${IMAPS} ${SHELL} ${WEBMIN} ${ADMINER}}
fi
CONF=/etc/iptables.up.rules
cat > ${CONF} <<EOF
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
*filter
:FORWARD ACCEPT [0:0]
:INPUT DROP [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type echo-request -j ACCEPT
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
EOF
for PORT in ${WEBMIN_FW_TCP_INCOMING}; do
    echo "-A INPUT -p tcp -m tcp --dport ${PORT} -j ACCEPT" >> ${CONF}
done
if [ "${WEBMIN_FW_UDP_INCOMING}" ]; then
    for port in ${WEBMIN_FW_UDP_INCOMING}; do
        echo "-A INPUT -p udp -m udp --dport ${PORT} -j ACCEPT" >> ${CONF}
    done
fi
if [ "${WEBMIN_FW_TCP_INCOMING_REJECT}" ]; then
    for port in ${WEBMIN_FW_TCP_INCOMING_REJECT}; do
        echo "-A INPUT -p tcp -m tcp --dport ${PORT} -j REJECT" >> ${CONF}
    done
fi
echo "COMMIT" >> ${CONF}
sed -i "/^$/d" ${CONF}

# set Webmin root password
MESSSAGE="Initializing admin info for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}
${FORMAVID}/bin/initialize/python/webmin.py

# make system theme overlay - used in bin/deploy/python/create-drupal-stack.py as well
THEME=/usr/share/webmin/system-theme
mkdir -p ${THEME}/unauthenticated
cat > ${THEME}/theme-info<<EOF
desc=Appliance System Theme
overlay=1
overlays=authentic 
version=1.0
EOF
cat > ${THEME}/config<<EOF
headhtml=<link rel='stylesheet' type='text/css' href='/unauthenticated/system/components/asset-builds/css/header.css' />
prebody=<header class='header' role='banner'><div id='block-${SITENAME}-branding' class='block block-system block-system-branding-block'><a href='/sysinfo.cgi?' title='Home' rel='home' class='site-logo'><img src='/unauthenticated/system/logo.svg' alt='Home' /></a><div class='site-name'><a href='/sysinfo.cgi?' title='Home' rel='home'>${SITETITLE} Webmin</a><br /></div></div></header>
EOF

# clean up
rm -f /etc/webmin/*.cache

# log completed
MESSSAGE="Package ${PACKAGE} install has completed."
echo ${MESSSAGE} | tee -a ${LOG}

exit 0
