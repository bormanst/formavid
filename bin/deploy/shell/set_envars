#!/bin/bash
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

# check default_envars
if [ -z "${LOG}" ]; then
    # create log files
    FORMAVID_LOGS=/var/log/formavid
    if [ ! -d "${FORMAVID_LOGS}" ]; then mkdir -p ${FORMAVID_LOGS}; fi
    # export log
    export LOG=${FORMAVID_LOGS}/deploy_appliance.log
fi

# check default_envars
if [ -z "${DEFAULT_ENVARS}" ]; then
    # set etc dir
    ETC_DIR=/etc/formavid
    # set default_envars
    DEFAULT_ENVARS=${ETC_DIR}/default_envars
    # check default_envars
    if [ ! -f "${DEFAULT_ENVARS}" ]; then
        # check config dir exists
        if [ ! -d "${ETC_DIR}" ]; then mkdir -p ${ETC_DIR}; fi
        # create file
        touch ${DEFAULT_ENVARS}
        # dir should exist: this script is supposed to be located in formavid/bin/deploy/shell
        FORMAVID=$(find /usr/local -name "formavid")
        if [ ! -z "${FORMAVID// }" ]; then
            # create etc default_envars to avoid git update overwrite
            cp -fp ${FORMAVID}/bin/deploy/shell/default_envars ${DEFAULT_ENVARS}
        fi
    fi
    . ${DEFAULT_ENVARS}
fi

# export user input
export_user_input () {
    # prompt for input with default
    read -p "Please enter ${1} or press enter to select the default of [${2}]:" ${1}
    # export based on intput
    if [[ -z "${!1// }" ]]; then export ${1}="${2}"; else export ${1}="${!1}"; fi
}

# get envars
ARG=1
for ENVAR in ${ENVAR_REQ_LIST}; do
    # skip passwords
    if [[ "${ENVAR}" != *"PASS"* ]]; then
        # get inputs
        export_user_input "${ENVAR}" "${!ENVAR}"
        # update default
        sed -i "s/^export ${ENVAR}=\(.*\)/export ${ENVAR}=\"${!ENVAR}\"/" ${DEFAULT_ENVARS}
    fi
    # args++
    let ARG=ARG+1
done

# set remaining envars
export APP_HOSTNAME=`echo "${DOMAIN,,}" | sed 's/www.//'`
export SITENAME=`echo ${APP_HOSTNAME} | sed 's/\.//g'`

# run once post install
if [ "${ALREADY_RUN}" = "True" ]; then
    # prompt for update emails
    echo ""
    read -p "Change the admin email for Drupal and Simple Invoices to ${APP_EMAIL} (y/n)?" CHOICE
    case "${CHOICE^^}" in
      Y|YES ) export UPDATE_EMAIL="True";;
      * ) export UPDATE_EMAIL="False";;
    esac
else
    export UPDATE_EMAIL="True";
fi

echo "$( date ) Exported user selected envars." >> ${LOG}
