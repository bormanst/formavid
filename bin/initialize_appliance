#!/bin/bash -e
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=initialize_appliance

# set default FORMAVID
export FORMAVID=/usr/local/formavid

# check FORMAVID
if [ ! -d "${FORMAVID}" ]; then
    # dir should exist: this script is supposed to be located in formavid/bin
    export FORMAVID=$(find /usr/local -name "formavid")
    if [ -z "${FORMAVID}" ]; then
        echo ""
        echo ""
        echo "WARNING! ${PACKAGE} depends on formavid's location being in /usr/local."
        echo "WARNING! Please ensure that formavid is located in /usr/local."
        echo "WARNING! OR"
        echo "WARNING! Modify formavid's default location formavid/bin/${PACKAGE}."
        echo ""
        echo ""
        exit 0
    fi
fi

# confirm initialization
echo ""
echo ""
echo "This script is primarily designed to initialize a new GCE instance."
echo "Most of the subscripts can be run individually but may require modification."
echo ""
echo ""
echo "WARNING! You are about to initialize the appliance."
echo "WARNING! This includes resetting passwords, ssh keys, and etckeeper."
echo "WARNING! Each script can be run individually as well, refer to script."
echo "WARNING! It does not include backups, databases, logs, home, etc."
echo "WARNING! Those need to be reset or cleaned manually."
echo ""
echo "WARNING! The appliance will automatically reboot!"
echo "WARNING! Save any work prior to running this script."
echo "WARNING! Please notify other users if applicable."
echo ""
echo "Note: This script assumes the old Solr password is 'SolrRocks'."
echo "Note: Modify SOLR_OLD if it is different or the Solr update will fail"
echo "Note: and Drupal8 Solr access will fail as well. Please see the Solr build"
echo "Note: script in the applications dir to reset it to SolrRocks if needed."
echo ""
read -p "Continue with initialization and reboot (y/n)?" CHOICE
case "${CHOICE^^}" in
    Y|YES ) :;;
    * ) exit 0;;
esac

# set log dir
FORMAVID_LOGS=/var/log/formavid

# check log dir exists
if [ ! -d "${FORMAVID_LOGS}" ]; then mkdir -p ${FORMAVID_LOGS}; fi

# export log
export LOG=${FORMAVID_LOGS}/deploy_appliance.log

MESSSAGE="$( date ) Initializing appliance ..."
echo ${MESSSAGE} | tee -a ${LOG}
echo ""

# enable stunnel4 services
sed -i "s|ENABLED=0|ENABLED=1|" /etc/default/stunnel4
systemctl restart stunnel4

# disable apache2 default
a2dissite 000-default

# remove GCE init info
rm -rf /var/www/html

# enable apache2 confs
a2ensite invoiceninja
a2ensite support
SITE=/etc/apache2/sites-available/zzz-admin.examplesitenamecom.conf
if [ -f ${SITE} ]; then
  # enable default admin
  a2ensite zzz-admin.examplesitenamecom
fi

# restart apache2
systemctl restart apache2
echo ""

# set envars by input
. ${FORMAVID}/bin/deploy/shell/set_envars
echo ""

# set passwords by input
. ${FORMAVID}/bin/deploy/shell/get_passwords
echo ""

# set hostname
${FORMAVID}/bin/initialize/python/change-hostname.py
echo ""

# set passwords
export SYNC_CSSADMIN="True"
export SOLR_OLD="SolrRocks"
${FORMAVID}/bin/initialize/python/change-passwords.py
echo ""

# check create initial stack
SITES=/var/www/drupal8/prod/web/sites/sites.php
if [ ! -f ${SITES} ]; then
  # create drupal stack
  ${FORMAVID}/bin/deploy/python/create-drupal-stack.py
  echo ""
fi

# regen ssh keys
${FORMAVID}/bin/initialize/shell/regen_sshkeys
echo ""

# regen ssl certs
/usr/local/bin/make-ssl-cert --default --force-overwrite
update-ca-certificates
echo ""

# initialize etckeeper
${FORMAVID}/bin/initialize/shell/init_etckeeper
echo ""

# reboot appliance
MESSSAGE="$( date ) Rebooting appliance ..."
echo ${MESSSAGE} | tee -a ${LOG}
echo ""

shutdown -r now

exit 0
