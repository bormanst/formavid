#!/bin/bash -e
# Copyright (C) 2018 Sean Borman <bormanst@gmail.com>.
# You should have received LICENSE.txt, a copy of the
# GNU General Public License, along with this program.
# If not, see <https://www.gnu.org/licenses/>.

PACKAGE=postfix

# log check
MESSSAGE="Checking dependencies for ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# check packages
PKG_CHECK=${PACKAGE^^}
if [ -z "${!PKG_CHECK}" ]; then exit 0; fi

# check dir
# Note: support alias added below so using as a trigger
if [ $(grep -c '^support:' /etc/aliases) -gt 0 ];  then
    MESSSAGE="The support alias already set. Skipping configuration for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
    echo "WARNING! ${PACKAGE} may have already been initialized by this script."
    echo "WARNING! Re-running this script may corrupt existing system."
    echo "WARNING! Please review script for further details."
    echo ""
    echo ""
    exit 0
fi

# log configure
MESSSAGE="Configuring ${PACKAGE} ..."
echo ${MESSSAGE} | tee -a ${LOG}

# apply overlay
OVERLAY_DIR=$1/overlay
if [ -d "${OVERLAY_DIR}" ]; then
    cp -rf ${OVERLAY_DIR}/* /
    MESSSAGE="Applied overlay for ${PACKAGE}."
    echo ${MESSSAGE} | tee -a ${LOG}
    echo ""
    echo ""
fi

# Use Maildir format.
postconf -e "home_mailbox = Maildir/"

# create virtual map
touch /etc/postfix/virtual

# add aliases
echo "support: admin" >> /etc/aliases
echo "root@localhost admin" >> /etc/postfix/virtual
echo "root@${APP_HOSTNAME} admin" >> /etc/postfix/virtual
echo "webmaster@localhost admin" >> /etc/postfix/virtual
newaliases

# post virtual map
postmap /etc/postfix/virtual
postconf -e 'virtual_alias_maps = hash:/etc/postfix/virtual'

# harden postfix and dovecot
postconf -e smtpd_banner='$myhostname ESMTP'
postconf -e "home_mailbox = Maildir/"
postconf -e "virtual_alias_maps = hash:/etc/postfix/virtual"
postconf -e "myhostname = ${APP_HOSTNAME}"
postconf -e "local_recipient_maps = proxy:unix:passwd.byname $alias_maps"
postconf -e "smtpd_tls_protocols = !SSLv2, !SSLv3"
postconf -e "smtpd_sasl_type = dovecot"
postconf -e "smtpd_sasl_path = private/auth"
postconf -e "smtpd_sasl_local_domain ="
postconf -e "smtpd_sasl_security_options = noanonymous"
postconf -e "broken_sasl_auth_clients = yes"
postconf -e "smtpd_sasl_auth_enable = yes"
postconf -e "smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination,reject_invalid_hostname,reject_non_fqdn_hostname,reject_non_fqdn_sender,reject_non_fqdn_recipient,reject_unknown_sender_domain,reject_rbl_client sbl.spamhaus.org,reject_rbl_client cbl.abuseat.org"
postconf -e "smtpd_relay_restrictions = permit_mynetworks,permit_sasl_authenticated,reject_unauth_destination"
postconf -e "smtp_tls_security_level = may"
postconf -e "smtpd_tls_security_level = may"
postconf -e "smtp_tls_note_starttls_offer = yes"
postconf -e "smtpd_tls_loglevel = 1"
postconf -e "smtpd_tls_received_header = yes"
postconf -e "smtpd_helo_required = yes"
postconf -e "smtpd_helo_restrictions = reject_non_fqdn_helo_hostname,reject_invalid_helo_hostname,reject_unknown_helo_hostname"
postconf -e "disable_vrfy_command = yes"
postconf -e "smtpd_delay_reject = yes"

# reload configs
postfix reload

# start service
systemctl restart ${PACKAGE}

# log completed
MESSSAGE="Package ${PACKAGE} install has completed."
echo ${MESSSAGE} | tee -a ${LOG}

exit 0
